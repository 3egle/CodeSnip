{"Vue standard API (SFC)":{"prefix":"vbase","body":["<template>","\t<div>","","\t</div>","</template>","","<script lang=\"ts\">","\timport Vue from \"vue\";","","\texport default Vue.extend({","\t\t${0}","\t});","</script>","","<style scoped>","","</style>"],"description":"Base for Vue.js File with TypeScript"},"VueConstructor standard API (SFC)":{"prefix":"vcbase","body":["<template>","\t<div>","","\t</div>","</template>","","<script lang=\"ts\">","\timport Vue, { VueConstructor } from \"vue\";","","\texport default (Vue as VueConstructor<Vue>).extend({","\t\t${0}","\t});","</script>","","<style scoped>","","</style>"],"description":"Base with VueConstructor for Vue.js File with TypeScript"},"VueConstructor standard API extending interface (SFC)":{"prefix":"vcibase","body":["<template>","\t<div>","","\t</div>","</template>","","<script lang=\"ts\">","\timport Vue, { VueConstructor } from \"vue\";","\timport ${1:NameComponent} from \"@/components/${1:NameComponent}.vue\";","","\tinterface Refs {","\t\t\\$refs: {","\t\t\t${2:aliasComponent}: InstanceType<typeof ${1:NameComponent}>,","\t\t}","\t}","\texport default (Vue as VueConstructor<Vue & Refs>).extend({","\t\t${0}","\t});","</script>","","<style scoped>","","</style>"],"description":"Base with VueConstructor extending interface for Vue.js File with TypeScript"},"Class-style API Vue (SFC)":{"prefix":"vcsbase","body":["<template>","\t<div>","","\t</div>","</template>","","<script lang=\"ts\">","\timport Vue from \"vue\";","\timport Component from \"vue-class-component\";","","\t@Component({})","\texport default class ${1:App} extends Vue {","\t\t${0}","\t};","</script>","","<style scoped>","","</style>"],"description":"Base class-style API for Vue.js File with TypeScript"},"Class-style API Vue extending Props (SFC)":{"prefix":"vcsibase","body":["<template>","\t<div>","","\t</div>","</template>","","<script lang=\"ts\">","\timport Vue from \"vue\";","\timport Component from \"vue-class-component\";","","\tconst ${1:App}Props = Vue.extend({","\t\tprops: {","\t\t\t${2:nameProp}: ${3:type}","\t\t}","\t})","","\t@Component({})","\texport default class ${1:App} extends ${1:App}Props {","\t\t${0}","\t};","</script>","","<style scoped>","","</style>"],"description":"Base class-style API extending Props for Vue.js File with TypeScript"},"Vue Composition API using Vue 2":{"prefix":"vcompbase","body":["<template>","","</template>","","<script lang=\"ts\">","\timport Vue from \"vue\";","\timport { defineComponent } from \"@vue/composition-api\";","","\texport default defineComponent({","\t\t${0}","\t});","</script>","","<style scoped>","","</style>"],"description":"Base for Vue.js File with TypeScript using the Composition API plugin for Vue 2"},"Augmenting Types":{"prefix":"v-augmenting","body":["import Vue from \"vue\"","","declare module \"vue/types/vue\" {","\tinterface Vue {","\t\t\\$_${1:myProperty}: ${2:type}","\t}","}"],"description":"Augmenting Types to declare an instance property"},"Augmenting Types to Global properties":{"prefix":"v-augmenting-global","body":["import Vue from \"vue\"","","declare module \"vue/types/vue\" {","\tinterface VueConstructor {","\t\t\\$_${1:myGlobal}: ${2:type}","\t}","}"],"description":"Declare additional global properties"},"Augmenting Types to components options":{"prefix":"v-augmenting-comp","body":["import Vue from \"vue\"","","declare module \"vue/types/options\" {","\tinterface ComponentOptions<V extends Vue> {","\t\t${1:myOption}?: ${2:type}","\t}","}"],"description":"Declare additional components options"},"Vue v-for Directive":{"prefix":"vfor","body":["<${1:div} v-for=\"${2:item} in ${2:item}s\" :key=\"${2:item}.id\">","\t{{ ${2:item} }}","</${1:div}>"],"description":"v-for statement"},"Vue v-model Directive":{"prefix":"vmodel","body":["<input v-model=\"${1:data}\" type=\"text\" />"],"description":"v-model directive"},"Vue v-model Number Directive":{"prefix":"vmodel-num","body":["<input v-model.number=\"${1:numData}\" type=\"number\" step=\"1\" />"],"description":"v-model directive number input"},"Vue v-on Shortcut Directive":{"prefix":"von","body":["@${1:eventListener}=\"${2:handler}\""],"description":"v-on custom handler"},"Vue v-on Shortcut Directive with arg ":{"prefix":"von-arg","body":["@${1:eventListener}=\"${2:handler}(${3:arg}, \\$event)\""],"description":"v-on custom handler with arguments"},"Vue v-on:click Shortcut Directive with arg":{"prefix":"von-click","body":["@click=\"${1:handler}(${2:arg}, \\$event)\""],"description":"v-on click handler with arguments"},"Vue v-on:submit Shortcut Directive":{"prefix":"von-submit","body":["@submit.prevent=\"${1:handler}\""],"description":"v-on submit handler with prevent"},"vue-class-component import":{"prefix":"vcc-imp","body":["import Component from \"vue-class-component\";"],"description":"Import Component with vue-class-property"},"vue-property-decorator import":{"prefix":"vpd-imp","body":["import { Component, Vue } from \"vue-property-decorator\";"],"description":"Import Vue and Component with vue-property-decorator"},"Class-style initial Data":{"prefix":"vcs-data","body":["${1:name}: ${2:type} = ${3:value};"],"description":"Class-style API initial data"},"Class-style annotate refs type":{"prefix":"vcs-refs","body":["\\$refs!: {","\t${1:nameComponent}: ${2:Component},","};"],"description":"Class-style API annotate refs type"},"Class-style computed":{"prefix":"vcs-computed","body":["get ${1:nameComputed} () {","\treturn ${2:value};","};"],"description":"Class-style API computed"},"Vue import":{"prefix":"v-imp","body":["import Vue from \"vue\";"],"description":"Import Vue"},"VueConstructor import":{"prefix":"vc-imp","body":["import Vue, { VueConstructor } from \"vue\";"],"description":"Import Vue and VueConstructor"},"Vue as VueConstructor definition":{"prefix":"vc-header","body":["export default (Vue as VueConstructor<Vue>).extend({"],"description":"Definition export default component as VueConstructor"},"Vue as VueConstructor + Other interface":{"prefix":"vco-header","body":["export default (Vue as VueConstructor<Vue & ${1:Refs}>).extend({"],"description":"Definition export default component as VueConstructor + interface"},"Vue Typed Data":{"prefix":"vdata","body":["data() {","\treturn {","\t\t${1:key}: ${2:value} as ${3:type},","\t};","},"],"description":"Component typed data as a function"},"Vue Props":{"prefix":"vprops","body":["props: {","\t${1:propName}: ${2:type},","},"],"description":"Vue Props"},"Vue Props require":{"prefix":"vprops-req","body":["props: {","\t${1:propName}: {","\t\ttype: ${2:Number},","\t\trequired: true,","\t},","},"],"description":"Vue Props required"},"Vue extend interface":{"prefix":"vinterface","body":["interface ${1:nameInterface} {","\t${2:key}: ${3:value},","},"],"description":"Interface for extend Vue"},"Vue Methods":{"prefix":"vmethod","body":["methods: {","\t${1:name}(${2:arg}): ${2:typedReturn} {","\t\t${0}","\t},","},"],"description":"Vue Method"},"Vue Computed":{"prefix":"vcomputed","body":["computed: {","\t${1:name}(): ${2:type} {","\t\treturn this.${3:data};","\t},","},"],"description":"Vue Computed value (must always be typed)"},"Vue Watchers":{"prefix":"vwatcher","body":["watch: {","\t${1:data}(${2:newValue}, ${3:oldValue}) {","\t\t${0}","\t},","},"],"description":"Vue watcher"},"Vue as VueConstructor with Refs":{"prefix":"vrefs","body":["interface ${1:Refs} {","\t\\$refs: {","\t\t${2:name}: HTMLInputElement","\t}","}","","export default (Vue as VueConstructor<Vue & ${1:Refs}>).extend({"],"description":"Declaration Refs by VueConstructor"},"Vue Filter":{"prefix":"vfilter","body":["filters: {","\t${1:fnName}(${2:value}) {","\t\treturn ${2:value}${0};","\t}","}"],"description":"Vue filter"},"Vue Render":{"prefix":"vrender","body":["render (createElement): VNode {","\treturn createElement(\"${1:tag}\", this.${2:computed})","},"],"description":"Vue render (needs return type)"}}